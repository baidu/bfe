[basic]
# The path of the file saving secret key
# A key-value mapping JSON type file
# for more key-value information(JWK): https://tools.ietf.org/html/rfc7517
# Can be override in product config
SecretPath =
# Config path for products
ProductConfigPath =

# By default, the module read JWT claims from payload(JWS) or plaintext(JWE) only.
# By setting EnabledHeaderClaims to true, the module will try to read JWT claims from header -
# in the case that a claim validation was enabled while it's not exists in payload(JWS) or plaintext(JWE).
# Can be override in product config
EnabledHeaderClaims = false

# Enabled validation for nested JWT
# NOTICE:
# This step will be skipped in the case that the nested JWT parse failed,
# it is in the consideration of different encryption key may be used for the nested JWT.
# The nested JWT should be Base64URL-encoded as the payload for JWS,
# or Base64URL-encoded as encrypted plaintext for JWE.
ValidateNested = true

# Validation for JWT claims
# NOTICE:
# Validation for claims will be applied when relative claim(s) present in the JWT header -
# or payload(when EnabledPayloadClaims was set to true). When no any relative claim(s) present, -
# only basic validation (for example: signature check) will be applied.
# All claims validation can be override in product config
# For more claims detail: https://tools.ietf.org/html/rfc7519#section-4

# exp (bool)
ValidateClaimExp = true
# nbf (bool)
ValidateClaimNbf = true
# iss (string)
# ValidateClaimIss = issuer
# sub (string)
# ValidateClaimSub = subject
# aud (string)
# ValidateClaimAud = audience

[log]
OpenDebug = true
